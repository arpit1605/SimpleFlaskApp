name: CI/CD for hosting a Flask-based Python Web Application
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  release:
    types: [published]

# Step 1: Install dependencies and run tests on the GitHub Runner (not on EC2)
jobs:
  install-dependencies:
    runs-on: ubuntu-latest  # This runs on GitHub's virtual machine
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Checks out code into the GitHub runner
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Installs the dependencies on the GitHub runner

  # Step 2: Run tests on the GitHub Runner
  run-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Run unit tests
        run: |
          pytest  # Runs tests on GitHub runner
        env:
          CI: true

  # Step 3: Build the application (placeholder for future extensions)
  build-application:
    runs-on: ubuntu-latest
    needs: run-tests  # This step only runs if tests pass
    steps:
      - name: Build the application
        run: |
          echo "Building the application"  # Placeholder: Insert any build-related commands here
          # For example, if you're using Docker, you might do something like:
          # docker build -t your-app:latest .

  # Step 4: Deploy the latest code to EC2 Instance
  deploy-ec2:
    runs-on: ubuntu-latest  # The GitHub runner coordinates deployment but does not deploy itself
    needs: build-application  # Only runs if the build step succeeds
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Deploy the latest code to EC2 Instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          # Ensure the directory exists or clone the repository
          if [ ! -d "~/SimpleFlaskApp" ]; then
            git clone https://github.com/arpit1605/SimpleFlaskApp.git
          fi
          cd ~/flask-example
          git pull origin dev  # Pull the latest changes on dev branch into EC2
          source venv/bin/activate || python3 -m venv venv && source venv/bin/activate
          pip install -r requirements.txt  # Install dependencies on EC2 instance
          nohup python app.py &  # Start the Flask app on EC2 instance
          EOF
        env:
          EC2_IP: ${{ secrets.EC2_IP }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
