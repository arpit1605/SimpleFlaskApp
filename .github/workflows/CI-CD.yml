name: CI/CD for hosting a Flask-based Python Web Application

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  # Step 1: Install dependencies, run tests, and build on the GitHub Runner (not on EC2)
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Only check out code once

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Installs dependencies, including pytest from requirements.txt

      - name: Run unit tests
        run: |
          pytest  # Run the pytest tests
        env:
          CI: true

      - name: Build the application
        run: |
          echo "Building the application"  # Placeholder for future build commands
          # For example, if you're using Docker, you might do something like:
          # docker build -t your-app:latest .

  # Step 2: Deploy the latest code to EC2 Instance with Error Handling
  deploy-ec2:
    runs-on: ubuntu-latest  # The GitHub runner coordinates deployment but does not deploy itself
    needs: test-and-build  # Only runs if the test-and-build step succeeds
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Deploy the latest code to EC2 Instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          
          # Enable error handling
          set -e
          
          # Logging the deployment process
          LOG_FILE="~/SimpleFlaskApp/deploy.log"
          exec > >(tee -a $LOG_FILE) 2>&1
          
          echo "Starting deployment..."
          
          # Ensure the directory exists or clone the repository
          if [ ! -d "~/SimpleFlaskApp" ]; then
            echo "Cloning repository..."
            git clone https://github.com/arpit1605/SimpleFlaskApp.git || { echo "Git clone failed"; exit 1; }
          fi

          cd ~/SimpleFlaskApp
          echo "Pulling latest changes from dev branch..."
          git pull origin dev || { echo "Git pull failed"; exit 1; }

          # Setting up virtual environment
          echo "Setting up virtual environment..."
          if [ -d "venv" ]; then
            source venv/bin/activate
          else
            python3 -m venv venv && source venv/bin/activate || { echo "Failed to create/activate virtual environment"; exit 1; }
          fi

          # Install dependencies
          echo "Installing dependencies..."
          pip install -r requirements.txt || { echo "Failed to install dependencies"; exit 1; }

          # Start Flask application with nohup
          echo "Starting Flask application..."
          nohup python app.py &

          # Check if Flask app started successfully
          sleep 5
          if pgrep -f "python app.py" > /dev/null
          then
            echo "Flask application started successfully"
          else
            echo "Failed to start Flask application" >&2
            exit 1
          fi

          EOF
        env:
          EC2_IP: ${{ secrets.EC2_IP }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
